Themes
======

When a theme is loaded, ``tomcat-manager`` displays certain output using the
styles defined in theme.

``tomcat-manager`` comes with several built-in themes which use can use. Built-in
themes can not be edited or modified. You can create your own user themes, either
from scratch or by cloning a built-in theme.

A theme is defined in a file using the `TOML <https://toml.io/en/>`_ format. The file
contains a set of scope definitions, and the style to use when rendering each scope.
Here's a simple example showing several scopes and their associated styles:

.. code-block:: toml

    [tm]
    error =  "#d70000"
    status =  "#00afff"

    [tm.help]
    category =  "gold1"
    border = "gold1"

For convenience, we use the `table <https://toml.io/en/v1.0.0#table>`_ features of
TOML. Those same four scopes could also be defined as:

.. code-block:: toml

    tm.error = "#d70000"
    tm.status =  "#00afff"
    tm.help.category =  "gold1"
    tm.help.border = "gold1"

All scopes and a description of how they are used are listed in
`Theme Scopes`_. A style specifies colors and attributes (like bold or italic)
to use when rendering the scope. See `Styles`_ for more information

By default, no theme is applied; all output is displayed using the default
style of your terminal emulator. Apply a theme by changing the ``theme``
:doc:`setting <settings>`.


Listing Themes
--------------


Loading a Theme
---------------

You can load or apply a theme using the ``set`` command. Set the ``theme`` setting
to the name of the theme you want to load, and ``tomcat-manager`` will load and
apply that theme. Any future output will now be generated using the styles specified
in the loaded theme.

If you don't want to use a theme, type:

.. code-block:: text

    tomcat-manager> set theme = ""

``tomcat-manager`` comes with built-in themes which can not be changed. If you create
your own theme with the same name as one of the built-in themes your theme will be
loaded instead of the built-in theme with the same name.


Location of Theme Files
-----------------------

User created themes are stored in a configuration directory. The location of this
directory is different depending on the operating system. You can see the exact
directory for your setup by typing the following from your operating system shell
prompt:

.. code-block:: bash

    $ tomcat-manager --theme-dir
    /Users/kotfu/Library/Application Support/tomcat-manager/themes

You can get the same information from within ``tomcat-manager`` by typing:

.. code-block:: text

    tomcat-manager> theme dir
    /Users/kotfu/Library/Application Support/tomcat-manager/themes


Creating a Theme
----------------

clone or create


Editing a Theme
---------------

``theme edit``

Theme Scopes
------------

Here's a list of all the scopes which ``tomcat-manager`` uses. In
this example, all scopes are set to a style of ``default``, which
displays the scope in the default foreground and backgroun color
of your terminal emulator.

If a theme contains unknown scopes, they will be ignored.

.. code-block:: toml

    # These scopes are applied to output generated by many commands.
    [tm]
    # error messages
    error =  "default"
    # status messages
    status =  "default"
    # progress animations for long-running commands (like connect or list)
    animation = "default"


    # When run with no arguments, the 'help' command shows a categorized list
    # of all the available commands. These scopes control the display of that
    # categorized list.
    [tm.help]
    # the name of a category or grouping of commands
    category =  "default"
    # the border line below the category  name
    border = "default"
    # the name of the command shown in the first column
    command =  "default"
    # arguments to the 'help' command
    args = "default"


    # These scopes are used when displaying help or usage for a specific command
    # i.e. when typing 'connect -h' or 'help connect'.
    [tm.usage]
    # name of the command
    prog =  "default"
    # groups of arguments, ie 'positional arguments:', and 'options:'
    groups =  "default"
    # the positional arguments and options
    args =  "default"
    # values for options, ie KEY is the metavar in '--key KEY'
    metavar =  "default"
    # the description of positional arguments and options
    help =  "default"
    # command descriptions, epilogs, and other text
    text =  "default"
    # syntax or references inline in other text
    syntax =  "default"


    # Used by the 'list' command which shows information about each
    # application deployed in the Tomcat server.
    [tm.list]
    # column headers in the table of displaye dinformation
    header =  "default"
    # the border line underneath the column headers
    border =  "default"


    # When showing details of an app deployed in a tomcat server,
    # like by the list command, use these scopes for attributes
    # of each application.
    [tm.app]
    # if the application is running, show the word 'running' in this style
    running =  "default"
    # if the application is stopped, show the word 'stopped' in this style
    stopped =  "default"
    # show the number of active sessions in this style
    sessions =  "default"

    # These scopes are used by the 'settings' command to show the various
    # program settings.
    [tm.setting]
    # name of the setting
    name =  "default"
    # the equals sign separating the setting from it's value
    equals =  "default"
    # the comment containing the description of the setting
    comment =  "default"
    # values which are strings, like 'prompt'
    string =  "default"
    # values which are boolean, like 'debug' and 'echo
    bool =  "default"
    # values which are integers, we have no settings with integer values
    # but have added it to all themes just in case
    int =  "default"
    # values which are floats, like 'timeout'
    float =  "default"


    # These scopes used by the 'theme list' command to show all available themes
    [tm.theme]
    # the category or group name of a set of themes
    category = "default"
    # the border line below the category name
    border = "default"



Styles
------


